# Reference: https://github.com/tmcdonell/config-alacritty/blob/master/alacritty.yml
#
# 視窗配置
window:
  # Window dimensions (changes require restart)
  #
  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  #
  # Values for `decorations` (macOS only):
  #     - transparent: Title bar, transparent background and title bar buttons
  #     - buttonless: Title bar, transparent background and no title bar buttons
  dimensions:
    columns: 132
    lines: 30

  # 動態調整邊緣與內容的間距，避免切到內容
  dynamic_padding: true
  # dynamic_padding: false

  # 隱藏視窗上方的 Bar (full/none)
  # decorations: full
  decorations: buttonless

  # 開啟時的初始模式(Windowed/Maximized/Fullscreen)
  startup_mode: Windowed
  # startup_mode: Maximized
  # startup_mode: Fullscreen

  padding:
    x: 5
    y: 5

# Scrolling bar
scrolling:
  history: 10000

# 字型配置
font:
  normal:
    family: MesloLGM Nerd Font
    style: Regular
  bold:
    family: MesloLGM Nerd Font
    style: Bold
  italic:
    family: MesloLGM Nerd Font
    style: Italic
  bold_italic:
    family: MesloLGM Nerd Font
    style: Bold Italic

  # 字元大小
  size: 20

  offset:
    x: 0
    # 行間距
    y: 0

  glyph_offset:
    x: 0
    # 保持 offset 的一半，確保字元會在行的正中間
    y: 0

  # use_thin_strokes: true

# 顏色主題
colors:
  # Default colors
  primary:
    background: "0x0d1926"
    foreground: "0xb4e1fd"

  # Normal colors
  normal:
    black: "0x363636"
    red: "0xff0883"
    green: "0x83ff08"
    yellow: "0xff8308"
    blue: "0x0883ff"
    magenta: "0x8308ff"
    cyan: "0x08ff83"
    white: "0xb6b6b6"

  # Bright colors
  bright:
    black: "0x424242"
    red: "0xff1e8e"
    green: "0x8eff1e"
    yellow: "0xff8e1e"
    blue: "0x1e8eff"
    magenta: "0x8e1eff"
    cyan: "0x1eff8e"
    white: "0xc2c2c2"

# Background opacity
#
# Window opacity as a floating point number from `0.0` to `1.0`.
# The value `0.0` is completely transparent and `1.0` is opaque.
window.opacity: 0.9

selection:
  # This string contains all characters that are used as separators for
  # "semantic words" in Alacritty.
  semantic_escape_chars: ",│`|:\"' ()[]{}<>\t"

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: true

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  #double_click: { threshold: 300 }
  #triple_click: { threshold: 300 }
  # If this is `true`, the cursor is temporarily hidden when typing.
  hide_when_typing: false

selection:
  semantic_escape_chars: ',│`|:"'' ()[]{}<>'

  # When set to `true`, selected text will be copied to the primary clipboard.
  save_to_clipboard: false

cursor:
  # Cursor style
  #style:
  # Cursor shape
  #
  # Values for `shape`:
  #   - ▇ Block
  #   - _ Underline
  #   - | Beam
  shape: Beam

  # Cursor blinking state
  #
  # Values for `blinking`:
  #   - Never: Prevent the cursor from ever blinking
  #   - Off: Disable blinking by default
  #   - On: Enable blinking by default
  #   - Always: Force the cursor to always blink
  blinking: On

#===============================================================================
# Key bindings
#===============================================================================
#
# Key bindings are specified as a list of objects. Each binding will specify a
# key and modifiers required to trigger it, terminal modes where the binding is
# applicable, and what should be done when the key binding fires. It can either
# send a byte sequence to the running application (`chars`), execute a
# predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Bindings are always filled by default, but will be replaced when a new binding
# with the same triggers is defined. To unset a default binding, it can be
# mapped to the `None` action.
#
# Example:
#   `- { key: V, mods: Control|Shift, action: Paste }`
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
#   Instead of using the name of the keys, the `key` field also supports using
#   the scancode of the desired key. Scancodes have to be specified as a
#   decimal number.
#   This command will allow you to display the hex scancodes for certain keys:
#     `showkey --scancodes`
#
# Values for `mods`:
#   - Command
#   - Control
#   - Option
#   - Super
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollLineUp
#   - ScrollLineDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#   - ClearLogNotice
#   - SpawnNewInstance
#   - ToggleFullscreen
#   - None
#
# Values for `action` (macOS only):
#   - ToggleSimpleFullscreen: Enters fullscreen without occupying another space
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad

  # (Windows/Linux only)
  #- { key: V,        mods: Control|Shift, action: Paste            }
  #- { key: C,        mods: Control|Shift, action: Copy             }
  #- { key: Insert,   mods: Shift,         action: PasteSelection   }
  #- { key: Key0,     mods: Control,       action: ResetFontSize    }
  #- { key: Equals,   mods: Control,       action: IncreaseFontSize }
  #- { key: Add,      mods: Control,       action: IncreaseFontSize }
  #- { key: Subtract, mods: Control,       action: DecreaseFontSize }
  #- { key: Minus,    mods: Control,       action: DecreaseFontSize }
  #- { key: Return,   mods: Alt,           action: ToggleFullscreen }

  # (macOS only)
  #- { key: Key0,   mods: Command,         action: ResetFontSize    }
  #- { key: Equals, mods: Command,         action: IncreaseFontSize }
  #- { key: Add,    mods: Command,         action: IncreaseFontSize }
  #- { key: Minus,  mods: Command,         action: DecreaseFontSize }
  #- { key: K,      mods: Command,         action: ClearHistory     }
  #- { key: K,      mods: Command,         chars: "\x0c"            }
  #- { key: V,      mods: Command,         action: Paste            }
  #- { key: C,      mods: Command,         action: Copy             }
  #- { key: H,      mods: Command,         action: Hide             }
  #- { key: Q,      mods: Command,         action: Quit             }
  #- { key: W,      mods: Command,         action: Quit             }
  #- { key: F,      mods: Command|Control, action: ToggleFullscreen }

# Send ESC (\x1b) before characters when alt is pressed.
alt_send_esc: true

# key_bindings:
#   - { key: Paste, action: Paste }
#   - { key: Copy, action: Copy }
#   - { key: L, mods: Control, action: ClearLogNotice }
#   - { key: L, mods: Control, chars: "\x0c" }
#   - { key: Home, mods: Alt, chars: "\x1b[1;3H" }
#   - { key: Home, chars: "\x1bOH", mode: AppCursor }
#   - { key: Home, chars: "\x1b[H", mode: ~AppCursor }
#   - { key: End, mods: Alt, chars: "\x1b[1;3F" }
#   - { key: End, chars: "\x1bOF", mode: AppCursor }
#   - { key: End, chars: "\x1b[F", mode: ~AppCursor }
#   - { key: PageUp, mods: Shift, action: ScrollPageUp, mode: ~Alt }
#   - { key: PageUp, mods: Shift, chars: "\x1b[5;2~", mode: Alt }
#   - { key: PageUp, mods: Control, chars: "\x1b[5;5~" }
#   - { key: PageUp, mods: Alt, chars: "\x1b[5;3~" }
#   - { key: PageUp, chars: "\x1b[5~" }
#   - { key: PageDown, mods: Shift, action: ScrollPageDown, mode: ~Alt }
#   - { key: PageDown, mods: Shift, chars: "\x1b[6;2~", mode: Alt }
#   - { key: PageDown, mods: Control, chars: "\x1b[6;5~" }
#   - { key: PageDown, mods: Alt, chars: "\x1b[6;3~" }
#   - { key: PageDown, chars: "\x1b[6~" }
#   - { key: Tab, mods: Shift, chars: "\x1b[Z" }
#   - { key: Back, chars: "\x7f" }
#   - { key: Back, mods: Alt, chars: "\x1b\x7f" }
#   - { key: Insert, chars: "\x1b[2~" }
#   - { key: Delete, chars: "\x1b[3~" }
#   - { key: Left, mods: Shift, chars: "\x1b[1;2D" }
#   - { key: Left, mods: Control, chars: "\x1b[1;5D" }
#   - { key: Left, mods: Alt, chars: "\x1b[1;3D" }
#   - { key: Left, chars: "\x1b[D", mode: ~AppCursor }
#   - { key: Left, chars: "\x1bOD", mode: AppCursor }
#   - { key: Right, mods: Shift, chars: "\x1b[1;2C" }
#   - { key: Right, mods: Control, chars: "\x1b[1;5C" }
#   - { key: Right, mods: Alt, chars: "\x1b[1;3C" }
#   - { key: Right, chars: "\x1b[C", mode: ~AppCursor }
#   - { key: Right, chars: "\x1bOC", mode: AppCursor }
#   - { key: Up, mods: Shift, chars: "\x1b[1;2A" }
#   - { key: Up, mods: Control, chars: "\x1b[1;5A" }
#   - { key: Up, mods: Alt, chars: "\x1b[1;3A" }
#   - { key: Up, chars: "\x1b[A", mode: ~AppCursor }
#   - { key: Up, chars: "\x1bOA", mode: AppCursor }
#   - { key: Down, mods: Shift, chars: "\x1b[1;2B" }
#   - { key: Down, mods: Control, chars: "\x1b[1;5B" }
#   - { key: Down, mods: Alt, chars: "\x1b[1;3B" }
#   - { key: Down, chars: "\x1b[B", mode: ~AppCursor }
#   - { key: Down, chars: "\x1bOB", mode: AppCursor }
#   - { key: F1, chars: "\x1bOP" }
#   - { key: F2, chars: "\x1bOQ" }
#   - { key: F3, chars: "\x1bOR" }
#   - { key: F4, chars: "\x1bOS" }
#   - { key: F5, chars: "\x1b[15~" }
#   - { key: F6, chars: "\x1b[17~" }
#   - { key: F7, chars: "\x1b[18~" }
#   - { key: F8, chars: "\x1b[19~" }
#   - { key: F9, chars: "\x1b[20~" }
#   - { key: F10, chars: "\x1b[21~" }
#   - { key: F11, chars: "\x1b[23~" }
#   - { key: F12, chars: "\x1b[24~" }
#   - { key: F1, mods: Shift, chars: "\x1b[1;2P" }
#   - { key: F2, mods: Shift, chars: "\x1b[1;2Q" }
#   - { key: F3, mods: Shift, chars: "\x1b[1;2R" }
#   - { key: F4, mods: Shift, chars: "\x1b[1;2S" }
#   - { key: F5, mods: Shift, chars: "\x1b[15;2~" }
#   - { key: F6, mods: Shift, chars: "\x1b[17;2~" }
#   - { key: F7, mods: Shift, chars: "\x1b[18;2~" }
#   - { key: F8, mods: Shift, chars: "\x1b[19;2~" }
#   - { key: F9, mods: Shift, chars: "\x1b[20;2~" }
#   - { key: F10, mods: Shift, chars: "\x1b[21;2~" }
#   - { key: F11, mods: Shift, chars: "\x1b[23;2~" }
#   - { key: F12, mods: Shift, chars: "\x1b[24;2~" }
#   - { key: F1, mods: Control, chars: "\x1b[1;5P" }
#   - { key: F2, mods: Control, chars: "\x1b[1;5Q" }
#   - { key: F3, mods: Control, chars: "\x1b[1;5R" }
#   - { key: F4, mods: Control, chars: "\x1b[1;5S" }
#   - { key: F5, mods: Control, chars: "\x1b[15;5~" }
#   - { key: F6, mods: Control, chars: "\x1b[17;5~" }
#   - { key: F7, mods: Control, chars: "\x1b[18;5~" }
#   - { key: F8, mods: Control, chars: "\x1b[19;5~" }
#   - { key: F9, mods: Control, chars: "\x1b[20;5~" }
#   - { key: F10, mods: Control, chars: "\x1b[21;5~" }
#   - { key: F11, mods: Control, chars: "\x1b[23;5~" }
#   - { key: F12, mods: Control, chars: "\x1b[24;5~" }
#   - { key: F1, mods: Alt, chars: "\x1b[1;6P" }
#   - { key: F2, mods: Alt, chars: "\x1b[1;6Q" }
#   - { key: F3, mods: Alt, chars: "\x1b[1;6R" }
#   - { key: F4, mods: Alt, chars: "\x1b[1;6S" }
#   - { key: F5, mods: Alt, chars: "\x1b[15;6~" }
#   - { key: F6, mods: Alt, chars: "\x1b[17;6~" }
#   - { key: F7, mods: Alt, chars: "\x1b[18;6~" }
#   - { key: F8, mods: Alt, chars: "\x1b[19;6~" }
#   - { key: F9, mods: Alt, chars: "\x1b[20;6~" }
#   - { key: F10, mods: Alt, chars: "\x1b[21;6~" }
#   - { key: F11, mods: Alt, chars: "\x1b[23;6~" }
#   - { key: F12, mods: Alt, chars: "\x1b[24;6~" }
#   - { key: F1, mods: Super, chars: "\x1b[1;3P" }
#   - { key: F2, mods: Super, chars: "\x1b[1;3Q" }
#   - { key: F3, mods: Super, chars: "\x1b[1;3R" }
#   - { key: F4, mods: Super, chars: "\x1b[1;3S" }
#   - { key: F5, mods: Super, chars: "\x1b[15;3~" }
#   - { key: F6, mods: Super, chars: "\x1b[17;3~" }
#   - { key: F7, mods: Super, chars: "\x1b[18;3~" }
#   - { key: F8, mods: Super, chars: "\x1b[19;3~" }
#   - { key: F9, mods: Super, chars: "\x1b[20;3~" }
#   - { key: F10, mods: Super, chars: "\x1b[21;3~" }
#   - { key: F11, mods: Super, chars: "\x1b[23;3~" }
#   - { key: F12, mods: Super, chars: "\x1b[24;3~" }
#   - { key: NumpadEnter, chars: "\n" }
#   - { key: F, mods: Command|Control, action: ToggleFullscreen }

# Startup directory, unset or None or home directory
# working_directory: None
working_directory: "/Users/alanjui/workspace"

# 啟動時自動執行指令
# shell:
#   program: /bin/zsh
#   args:
#     - -l
#     - -c
#     - "tmux attach || tmux"
shell:
  program: /bin/zsh
  args:
    - -l
    - -c
    - "tmux attach-session -t Alacritty"
